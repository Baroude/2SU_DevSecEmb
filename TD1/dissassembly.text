
program:     format de fichier elf64-x86-64

SYMBOL TABLE:
00000000000002a8 l    d  .interp	0000000000000000              .interp
00000000000002c4 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
00000000000002e8 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000308 l    d  .gnu.hash	0000000000000000              .gnu.hash
0000000000000330 l    d  .dynsym	0000000000000000              .dynsym
0000000000000450 l    d  .dynstr	0000000000000000              .dynstr
0000000000000506 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000000520 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000550 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000000610 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000001000 l    d  .init	0000000000000000              .init
0000000000001020 l    d  .plt	0000000000000000              .plt
0000000000001090 l    d  .plt.got	0000000000000000              .plt.got
00000000000010a0 l    d  .text	0000000000000000              .text
00000000000012a4 l    d  .fini	0000000000000000              .fini
0000000000002000 l    d  .rodata	0000000000000000              .rodata
0000000000002048 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000002090 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000003de8 l    d  .init_array	0000000000000000              .init_array
0000000000003df0 l    d  .fini_array	0000000000000000              .fini_array
0000000000003df8 l    d  .dynamic	0000000000000000              .dynamic
0000000000003fd8 l    d  .got	0000000000000000              .got
0000000000004000 l    d  .got.plt	0000000000000000              .got.plt
0000000000004048 l    d  .data	0000000000000000              .data
0000000000004058 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000010d0 l     F .text	0000000000000000              deregister_tm_clones
0000000000001100 l     F .text	0000000000000000              register_tm_clones
0000000000001140 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000004058 l     O .bss	0000000000000001              completed.0
0000000000003df0 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000001180 l     F .text	0000000000000000              frame_dummy
0000000000003de8 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              program.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000021b4 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000003df0 l       .init_array	0000000000000000              __init_array_end
0000000000003df8 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000003de8 l       .init_array	0000000000000000              __init_array_start
0000000000002048 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000004000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000001000 l     F .init	0000000000000000              _init
00000000000012a0 g     F .text	0000000000000001              __libc_csu_fini
0000000000000000       F *UND*	0000000000000000              free@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000004048  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              puts@GLIBC_2.2.5
0000000000004058 g       .data	0000000000000000              _edata
00000000000012a4 g     F .fini	0000000000000000              .hidden _fini
0000000000000000       F *UND*	0000000000000000              printf@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@GLIBC_2.2.5
0000000000004048 g       .data	0000000000000000              __data_start
0000000000000000       F *UND*	0000000000000000              strcmp@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000004050 g     O .data	0000000000000000              .hidden __dso_handle
0000000000002000 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000001240 g     F .text	000000000000005d              __libc_csu_init
0000000000000000       F *UND*	0000000000000000              malloc@GLIBC_2.2.5
0000000000004060 g       .bss	0000000000000000              _end
00000000000010a0 g     F .text	000000000000002b              _start
0000000000004058 g       .bss	0000000000000000              __bss_start
00000000000011b6 g     F .text	0000000000000084              main
0000000000001185 g     F .text	0000000000000031              is_valid
0000000000000000       F *UND*	0000000000000000              __isoc99_scanf@GLIBC_2.7
0000000000004058 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@GLIBC_2.2.5



Déassemblage de la section .init :

0000000000001000 <_init> (Offset dans le fichier : 0x1000):
_init():
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__> (Offset dans le fichier : 0x3fe8)
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12> (Offset dans le fichier : 0x1012)
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Déassemblage de la section .plt :

0000000000001020 <.plt> (Offset dans le fichier : 0x1020):
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8> (Offset dans le fichier : 0x4008)
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10> (Offset dans le fichier : 0x4010)
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt> (Offset dans le fichier : 0x1030):
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <free@GLIBC_2.2.5> (Offset dans le fichier : 0x4018)
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt> (Offset dans le fichier : 0x1020)

0000000000001040 <puts@plt> (Offset dans le fichier : 0x1040):
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <puts@GLIBC_2.2.5> (Offset dans le fichier : 0x4020)
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt> (Offset dans le fichier : 0x1020)

0000000000001050 <printf@plt> (Offset dans le fichier : 0x1050):
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <printf@GLIBC_2.2.5> (Offset dans le fichier : 0x4028)
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt> (Offset dans le fichier : 0x1020)

0000000000001060 <strcmp@plt> (Offset dans le fichier : 0x1060):
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <strcmp@GLIBC_2.2.5> (Offset dans le fichier : 0x4030)
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt> (Offset dans le fichier : 0x1020)

0000000000001070 <malloc@plt> (Offset dans le fichier : 0x1070):
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <malloc@GLIBC_2.2.5> (Offset dans le fichier : 0x4038)
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt> (Offset dans le fichier : 0x1020)

0000000000001080 <__isoc99_scanf@plt> (Offset dans le fichier : 0x1080):
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <__isoc99_scanf@GLIBC_2.7> (Offset dans le fichier : 0x4040)
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt> (Offset dans le fichier : 0x1020)

Déassemblage de la section .plt.got :

0000000000001090 <__cxa_finalize@plt> (Offset dans le fichier : 0x1090):
    1090:	ff 25 62 2f 00 00    	jmpq   *0x2f62(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5> (Offset dans le fichier : 0x3ff8)
    1096:	66 90                	xchg   %ax,%ax

Déassemblage de la section .text :

00000000000010a0 <_start> (Offset dans le fichier : 0x10a0):
_start():
    10a0:	31 ed                	xor    %ebp,%ebp
    10a2:	49 89 d1             	mov    %rdx,%r9
    10a5:	5e                   	pop    %rsi
    10a6:	48 89 e2             	mov    %rsp,%rdx
    10a9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10ad:	50                   	push   %rax
    10ae:	54                   	push   %rsp
    10af:	4c 8d 05 ea 01 00 00 	lea    0x1ea(%rip),%r8        # 12a0 <__libc_csu_fini> (Offset dans le fichier : 0x12a0)
    10b6:	48 8d 0d 83 01 00 00 	lea    0x183(%rip),%rcx        # 1240 <__libc_csu_init> (Offset dans le fichier : 0x1240)
    10bd:	48 8d 3d f2 00 00 00 	lea    0xf2(%rip),%rdi        # 11b6 <main> (Offset dans le fichier : 0x11b6)
    10c4:	ff 15 16 2f 00 00    	callq  *0x2f16(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5> (Offset dans le fichier : 0x3fe0)
    10ca:	f4                   	hlt    
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <deregister_tm_clones> (Offset dans le fichier : 0x10d0):
deregister_tm_clones():
    10d0:	48 8d 3d 81 2f 00 00 	lea    0x2f81(%rip),%rdi        # 4058 <__TMC_END__> (Offset dans le fichier : 0x4058)
    10d7:	48 8d 05 7a 2f 00 00 	lea    0x2f7a(%rip),%rax        # 4058 <__TMC_END__> (Offset dans le fichier : 0x4058)
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28> (Offset dans le fichier : 0x10f8)
    10e3:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable> (Offset dans le fichier : 0x3fd8)
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28> (Offset dans le fichier : 0x10f8)
    10ef:	ff e0                	jmpq   *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones> (Offset dans le fichier : 0x1100):
register_tm_clones():
    1100:	48 8d 3d 51 2f 00 00 	lea    0x2f51(%rip),%rdi        # 4058 <__TMC_END__> (Offset dans le fichier : 0x4058)
    1107:	48 8d 35 4a 2f 00 00 	lea    0x2f4a(%rip),%rsi        # 4058 <__TMC_END__> (Offset dans le fichier : 0x4058)
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38> (Offset dans le fichier : 0x1138)
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable> (Offset dans le fichier : 0x3ff0)
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38> (Offset dans le fichier : 0x1138)
    1130:	ff e0                	jmpq   *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux> (Offset dans le fichier : 0x1140):
__do_global_dtors_aux():
    1140:	80 3d 11 2f 00 00 00 	cmpb   $0x0,0x2f11(%rip)        # 4058 <__TMC_END__> (Offset dans le fichier : 0x4058)
    1147:	75 2f                	jne    1178 <__do_global_dtors_aux+0x38> (Offset dans le fichier : 0x1178)
    1149:	55                   	push   %rbp
    114a:	48 83 3d a6 2e 00 00 00 	cmpq   $0x0,0x2ea6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5> (Offset dans le fichier : 0x3ff8)
    1152:	48 89 e5             	mov    %rsp,%rbp
    1155:	74 0c                	je     1163 <__do_global_dtors_aux+0x23> (Offset dans le fichier : 0x1163)
    1157:	48 8b 3d f2 2e 00 00 	mov    0x2ef2(%rip),%rdi        # 4050 <__dso_handle> (Offset dans le fichier : 0x4050)
    115e:	e8 2d ff ff ff       	callq  1090 <__cxa_finalize@plt> (Offset dans le fichier : 0x1090)
    1163:	e8 68 ff ff ff       	callq  10d0 <deregister_tm_clones> (Offset dans le fichier : 0x10d0)
    1168:	c6 05 e9 2e 00 00 01 	movb   $0x1,0x2ee9(%rip)        # 4058 <__TMC_END__> (Offset dans le fichier : 0x4058)
    116f:	5d                   	pop    %rbp
    1170:	c3                   	retq   
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy> (Offset dans le fichier : 0x1180):
frame_dummy():
    1180:	e9 7b ff ff ff       	jmpq   1100 <register_tm_clones> (Offset dans le fichier : 0x1100)

0000000000001185 <is_valid> (Offset dans le fichier : 0x1185):
is_valid():
    1185:	55                   	push   %rbp
    1186:	48 89 e5             	mov    %rsp,%rbp
    1189:	48 83 ec 10          	sub    $0x10,%rsp
    118d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1191:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1195:	48 8d 35 68 0e 00 00 	lea    0xe68(%rip),%rsi        # 2004 <_IO_stdin_used+0x4> (Offset dans le fichier : 0x2004)
    119c:	48 89 c7             	mov    %rax,%rdi
    119f:	e8 bc fe ff ff       	callq  1060 <strcmp@plt> (Offset dans le fichier : 0x1060)
    11a4:	85 c0                	test   %eax,%eax
    11a6:	75 07                	jne    11af <is_valid+0x2a> (Offset dans le fichier : 0x11af)
    11a8:	b8 01 00 00 00       	mov    $0x1,%eax
    11ad:	eb 05                	jmp    11b4 <is_valid+0x2f> (Offset dans le fichier : 0x11b4)
    11af:	b8 00 00 00 00       	mov    $0x0,%eax
    11b4:	c9                   	leaveq 
    11b5:	c3                   	retq   

00000000000011b6 <main> (Offset dans le fichier : 0x11b6):
main():
    11b6:	55                   	push   %rbp
    11b7:	48 89 e5             	mov    %rsp,%rbp
    11ba:	48 83 ec 10          	sub    $0x10,%rsp
    11be:	48 c7 45 f8 00 00 00 00 	movq   $0x0,-0x8(%rbp)
    11c6:	bf 00 01 00 00       	mov    $0x100,%edi
    11cb:	e8 a0 fe ff ff       	callq  1070 <malloc@plt> (Offset dans le fichier : 0x1070)
    11d0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11d4:	48 8d 3d 2e 0e 00 00 	lea    0xe2e(%rip),%rdi        # 2009 <_IO_stdin_used+0x9> (Offset dans le fichier : 0x2009)
    11db:	b8 00 00 00 00       	mov    $0x0,%eax
    11e0:	e8 6b fe ff ff       	callq  1050 <printf@plt> (Offset dans le fichier : 0x1050)
    11e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11e9:	48 89 c6             	mov    %rax,%rsi
    11ec:	48 8d 3d 2c 0e 00 00 	lea    0xe2c(%rip),%rdi        # 201f <_IO_stdin_used+0x1f> (Offset dans le fichier : 0x201f)
    11f3:	b8 00 00 00 00       	mov    $0x0,%eax
    11f8:	e8 83 fe ff ff       	callq  1080 <__isoc99_scanf@plt> (Offset dans le fichier : 0x1080)
    11fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1201:	48 89 c7             	mov    %rax,%rdi
    1204:	e8 7c ff ff ff       	callq  1185 <is_valid> (Offset dans le fichier : 0x1185)
    1209:	85 c0                	test   %eax,%eax
    120b:	74 0e                	je     121b <main+0x65> (Offset dans le fichier : 0x121b)
    120d:	48 8d 3d 0e 0e 00 00 	lea    0xe0e(%rip),%rdi        # 2022 <_IO_stdin_used+0x22> (Offset dans le fichier : 0x2022)
    1214:	e8 27 fe ff ff       	callq  1040 <puts@plt> (Offset dans le fichier : 0x1040)
    1219:	eb 0c                	jmp    1227 <main+0x71> (Offset dans le fichier : 0x1227)
    121b:	48 8d 3d 10 0e 00 00 	lea    0xe10(%rip),%rdi        # 2032 <_IO_stdin_used+0x32> (Offset dans le fichier : 0x2032)
    1222:	e8 19 fe ff ff       	callq  1040 <puts@plt> (Offset dans le fichier : 0x1040)
    1227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    122b:	48 89 c7             	mov    %rax,%rdi
    122e:	e8 fd fd ff ff       	callq  1030 <free@plt> (Offset dans le fichier : 0x1030)
    1233:	b8 00 00 00 00       	mov    $0x0,%eax
    1238:	c9                   	leaveq 
    1239:	c3                   	retq   
    123a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001240 <__libc_csu_init> (Offset dans le fichier : 0x1240):
__libc_csu_init():
    1240:	41 57                	push   %r15
    1242:	4c 8d 3d 9f 2b 00 00 	lea    0x2b9f(%rip),%r15        # 3de8 <__frame_dummy_init_array_entry> (Offset dans le fichier : 0x3de8)
    1249:	41 56                	push   %r14
    124b:	49 89 d6             	mov    %rdx,%r14
    124e:	41 55                	push   %r13
    1250:	49 89 f5             	mov    %rsi,%r13
    1253:	41 54                	push   %r12
    1255:	41 89 fc             	mov    %edi,%r12d
    1258:	55                   	push   %rbp
    1259:	48 8d 2d 90 2b 00 00 	lea    0x2b90(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry> (Offset dans le fichier : 0x3df0)
    1260:	53                   	push   %rbx
    1261:	4c 29 fd             	sub    %r15,%rbp
    1264:	48 83 ec 08          	sub    $0x8,%rsp
    1268:	e8 93 fd ff ff       	callq  1000 <_init> (Offset dans le fichier : 0x1000)
    126d:	48 c1 fd 03          	sar    $0x3,%rbp
    1271:	74 1b                	je     128e <__libc_csu_init+0x4e> (Offset dans le fichier : 0x128e)
    1273:	31 db                	xor    %ebx,%ebx
    1275:	0f 1f 00             	nopl   (%rax)
    1278:	4c 89 f2             	mov    %r14,%rdx
    127b:	4c 89 ee             	mov    %r13,%rsi
    127e:	44 89 e7             	mov    %r12d,%edi
    1281:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1285:	48 83 c3 01          	add    $0x1,%rbx
    1289:	48 39 dd             	cmp    %rbx,%rbp
    128c:	75 ea                	jne    1278 <__libc_csu_init+0x38> (Offset dans le fichier : 0x1278)
    128e:	48 83 c4 08          	add    $0x8,%rsp
    1292:	5b                   	pop    %rbx
    1293:	5d                   	pop    %rbp
    1294:	41 5c                	pop    %r12
    1296:	41 5d                	pop    %r13
    1298:	41 5e                	pop    %r14
    129a:	41 5f                	pop    %r15
    129c:	c3                   	retq   
    129d:	0f 1f 00             	nopl   (%rax)

00000000000012a0 <__libc_csu_fini> (Offset dans le fichier : 0x12a0):
__libc_csu_fini():
    12a0:	c3                   	retq   

Déassemblage de la section .fini :

00000000000012a4 <_fini> (Offset dans le fichier : 0x12a4):
_fini():
    12a4:	48 83 ec 08          	sub    $0x8,%rsp
    12a8:	48 83 c4 08          	add    $0x8,%rsp
    12ac:	c3                   	retq   
